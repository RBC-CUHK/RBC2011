<html>
<body>
<pre>
<h1>µVision Build Log</h1>
<h2>Project:</h2>
F:\Documents\Kit\RBC\Code\RBC2011\code\robocon.uvproj
Project File Date:  08/17/2010

<h2>Output:</h2>
Build target 'Target 1'
assembling Startup.s...
compiling main.c...
compiling ral_encoder.c...
compiling ral_joystick.c...
compiling ral_linesensor.c...
compiling ral_motor.c...
compiling ral_mux.c...
compiling ral_odometry.c...
RAL\ral_odometry.h(20): error:  #70: incomplete type is not allowed
RAL\ral_odometry.h:     struct Motor_Setting motorL;
RAL\ral_odometry.h:                          ^
RAL\ral_odometry.h(21): error:  #70: incomplete type is not allowed
RAL\ral_odometry.h:     struct Motor_Setting motorR;
RAL\ral_odometry.h:                          ^
RAL\ral_odometry.c(18): warning:  #223-D: function "Encoder_ReadBuffer" declared implicitly
RAL\ral_odometry.c:     P->encoderLastCntL = Encoder_ReadBuffer(P->encoderChannelL);
RAL\ral_odometry.c:                          ^
RAL\ral_odometry.c(34): warning:  #223-D: function "Encoder_ReadBuffer" declared implicitly
RAL\ral_odometry.c:       LnewCount = Encoder_ReadBuffer(P->encoderChannelL);
RAL\ral_odometry.c:                   ^
RAL\ral_odometry.c: RAL\ral_odometry.c: 2 warnings, 2 errors
compiling ral_pid.c...
RAL\ral_odometry.h(20): error:  #70: incomplete type is not allowed
RAL\ral_odometry.h:     struct Motor_Setting motorL;
RAL\ral_odometry.h:                          ^
RAL\ral_odometry.h(21): error:  #70: incomplete type is not allowed
RAL\ral_odometry.h:     struct Motor_Setting motorR;
RAL\ral_odometry.h:                          ^
RAL\ral_pid.h(62): error:  #20: identifier "Motor_Setting" is undefined
RAL\ral_pid.h:   struct PIDStruct* PID_Init_Vel(struct PIDStruct* PIDS,double targetSpeed,Motor_Setting* motor,int encoderChannel);
RAL\ral_pid.h:                                                                            ^
RAL\ral_pid.c(179): warning:  #223-D: function "Encoder_ReadBuffer" declared implicitly
RAL\ral_pid.c:          return (double)Encoder_ReadBuffer(POSS->encoderChannel) - correctPos; 
RAL\ral_pid.c:                         ^
RAL\ral_pid.c(183): error:  #393: pointer to incomplete class type is not allowed
RAL\ral_pid.c:          POSS->motor->Motor_SetPWM(POSS->motor,result);
RAL\ral_pid.c:          ^
RAL\ral_pid.c(188): warning:  #223-D: function "Encoder_ReadBuffer" declared implicitly
RAL\ral_pid.c:          int newPos = Encoder_ReadBuffer(VELS->encoderChannel);
RAL\ral_pid.c:                       ^
RAL\ral_pid.c(195): error:  #393: pointer to incomplete class type is not allowed
RAL\ral_pid.c:          VELS->motor->Motor_SetPWM(VELS->motor,result);
RAL\ral_pid.c:          ^
RAL\ral_pid.c(237): warning:  #167-D: argument of type "double (*)(struct PosInfo *)" is incompatible with parameter of type "double (*)(void *)"
RAL\ral_pid.c:          return PID_Init(PIDS,PosInfoErrCal,PosInfoOutFunc,POSS);
RAL\ral_pid.c:                               ^
RAL\ral_pid.c(237): warning:  #167-D: argument of type "void (*)(struct PosInfo *, double)" is incompatible with parameter of type "void (*)(void *, double)"
RAL\ral_pid.c:          return PID_Init(PIDS,PosInfoErrCal,PosInfoOutFunc,POSS);
RAL\ral_pid.c:                                             ^
RAL\ral_pid.c(240): error:  #20: identifier "Motor_Setting" is undefined
RAL\ral_pid.c:   struct PIDStruct* PID_Init_Vel(struct PIDStruct* PIDS,double targetSpeed,Motor_Setting* motor,int encoderChannel){
RAL\ral_pid.c:                                                                            ^
RAL\ral_pid.c(248): warning:  #167-D: argument of type "double (*)(struct VelInfo *)" is incompatible with parameter of type "double (*)(void *)"
RAL\ral_pid.c:          return PID_Init(PIDS,VelInfoErrCal,VelInfoOutFunc,VELS);
RAL\ral_pid.c:                               ^
RAL\ral_pid.c(248): warning:  #167-D: argument of type "void (*)(struct VelInfo *, double)" is incompatible with parameter of type "void (*)(void *, double)"
RAL\ral_pid.c:          return PID_Init(PIDS,VelInfoErrCal,VelInfoOutFunc,VELS);
RAL\ral_pid.c:                                             ^
RAL\ral_pid.c(256): warning:  #167-D: argument of type "double (*)(struct ThetaInfo *)" is incompatible with parameter of type "double (*)(void *)"
RAL\ral_pid.c:          return PID_Init(PIDS,ThetaInfoErrCal,ThetaInfoOutFunc,THES);
RAL\ral_pid.c:                               ^
RAL\ral_pid.c(256): warning:  #167-D: argument of type "void (*)(struct ThetaInfo *, double)" is incompatible with parameter of type "void (*)(void *, double)"
RAL\ral_pid.c:          return PID_Init(PIDS,ThetaInfoErrCal,ThetaInfoOutFunc,THES);
RAL\ral_pid.c:                                               ^
RAL\ral_pid.c: RAL\ral_pid.c: 8 warnings, 6 errors
compiling mal_adc.c...
compiling mal_gpio.c...
compiling mal_iap.c...
compiling mal_pwm.c...
compiling mal_spi.c...
compiling mal_uart.c...
Target not created
Build target 'Target 1'
assembling Startup.s...
compiling main.c...
compiling ral_encoder.c...
compiling ral_joystick.c...
compiling ral_linesensor.c...
compiling ral_motor.c...
compiling ral_mux.c...
compiling ral_odometry.c...
RAL\ral_motor.h(11): warning:  #1-D: last line of file ends without a newline
RAL\ral_motor.h:   void Motor_Set213xPWM(struct Motor_Setting*, int PWM);
RAL\ral_motor.h:                                                         ^
RAL\ral_odometry.c(18): warning:  #223-D: function "Encoder_ReadBuffer" declared implicitly
RAL\ral_odometry.c:     P->encoderLastCntL = Encoder_ReadBuffer(P->encoderChannelL);
RAL\ral_odometry.c:                          ^
RAL\ral_odometry.c(34): warning:  #223-D: function "Encoder_ReadBuffer" declared implicitly
RAL\ral_odometry.c:       LnewCount = Encoder_ReadBuffer(P->encoderChannelL);
RAL\ral_odometry.c:                   ^
RAL\ral_odometry.c: RAL\ral_odometry.c: 3 warnings, 0 errors
compiling ral_pid.c...
RAL\ral_motor.h(11): warning:  #1-D: last line of file ends without a newline
RAL\ral_motor.h:   void Motor_Set213xPWM(struct Motor_Setting*, int PWM);
RAL\ral_motor.h:                                                         ^
RAL\ral_pid.h(62): error:  #20: identifier "Motor_Setting" is undefined
RAL\ral_pid.h:   struct PIDStruct* PID_Init_Vel(struct PIDStruct* PIDS,double targetSpeed,Motor_Setting* motor,int encoderChannel);
RAL\ral_pid.h:                                                                            ^
RAL\ral_pid.c(179): warning:  #223-D: function "Encoder_ReadBuffer" declared implicitly
RAL\ral_pid.c:          return (double)Encoder_ReadBuffer(POSS->encoderChannel) - correctPos; 
RAL\ral_pid.c:                         ^
RAL\ral_pid.c(188): warning:  #223-D: function "Encoder_ReadBuffer" declared implicitly
RAL\ral_pid.c:          int newPos = Encoder_ReadBuffer(VELS->encoderChannel);
RAL\ral_pid.c:                       ^
RAL\ral_pid.c(205): error:  #140: too many arguments in function call
RAL\ral_pid.c:                  THES->pos->motorL->Motor_SetPWM(THES->pos->motorL,THES->pos->motorL->currPWM,result);
RAL\ral_pid.c:                                                                                               ^
RAL\ral_pid.c(207): error:  #140: too many arguments in function call
RAL\ral_pid.c:                  THES->pos->motorR->Motor_SetPWM(THES->pos->motorR,THES->pos->motorR->currPWM,result);
RAL\ral_pid.c:                                                                                               ^
RAL\ral_pid.c(237): warning:  #167-D: argument of type "double (*)(struct PosInfo *)" is incompatible with parameter of type "double (*)(void *)"
RAL\ral_pid.c:          return PID_Init(PIDS,PosInfoErrCal,PosInfoOutFunc,POSS);
RAL\ral_pid.c:                               ^
RAL\ral_pid.c(237): warning:  #167-D: argument of type "void (*)(struct PosInfo *, double)" is incompatible with parameter of type "void (*)(void *, double)"
RAL\ral_pid.c:          return PID_Init(PIDS,PosInfoErrCal,PosInfoOutFunc,POSS);
RAL\ral_pid.c:                                             ^
RAL\ral_pid.c(240): error:  #20: identifier "Motor_Setting" is undefined
RAL\ral_pid.c:   struct PIDStruct* PID_Init_Vel(struct PIDStruct* PIDS,double targetSpeed,Motor_Setting* motor,int encoderChannel){
RAL\ral_pid.c:                                                                            ^
RAL\ral_pid.c(248): warning:  #167-D: argument of type "double (*)(struct VelInfo *)" is incompatible with parameter of type "double (*)(void *)"
RAL\ral_pid.c:          return PID_Init(PIDS,VelInfoErrCal,VelInfoOutFunc,VELS);
RAL\ral_pid.c:                               ^
RAL\ral_pid.c(248): warning:  #167-D: argument of type "void (*)(struct VelInfo *, double)" is incompatible with parameter of type "void (*)(void *, double)"
RAL\ral_pid.c:          return PID_Init(PIDS,VelInfoErrCal,VelInfoOutFunc,VELS);
RAL\ral_pid.c:                                             ^
RAL\ral_pid.c(256): warning:  #167-D: argument of type "double (*)(struct ThetaInfo *)" is incompatible with parameter of type "double (*)(void *)"
RAL\ral_pid.c:          return PID_Init(PIDS,ThetaInfoErrCal,ThetaInfoOutFunc,THES);
RAL\ral_pid.c:                               ^
RAL\ral_pid.c(256): warning:  #167-D: argument of type "void (*)(struct ThetaInfo *, double)" is incompatible with parameter of type "void (*)(void *, double)"
RAL\ral_pid.c:          return PID_Init(PIDS,ThetaInfoErrCal,ThetaInfoOutFunc,THES);
RAL\ral_pid.c:                                               ^
RAL\ral_pid.c: RAL\ral_pid.c: 9 warnings, 4 errors
compiling mal_adc.c...
compiling mal_gpio.c...
compiling mal_iap.c...
compiling mal_pwm.c...
compiling mal_spi.c...
compiling mal_uart.c...
Target not created
Build target 'Target 1'
assembling Startup.s...
compiling main.c...
compiling ral_encoder.c...
compiling ral_joystick.c...
compiling ral_linesensor.c...
compiling ral_motor.c...
compiling ral_mux.c...
compiling ral_odometry.c...
RAL\ral_odometry.c(18): warning:  #223-D: function "Encoder_ReadBuffer" declared implicitly
RAL\ral_odometry.c:     P->encoderLastCntL = Encoder_ReadBuffer(P->encoderChannelL);
RAL\ral_odometry.c:                          ^
RAL\ral_odometry.c(34): warning:  #223-D: function "Encoder_ReadBuffer" declared implicitly
RAL\ral_odometry.c:       LnewCount = Encoder_ReadBuffer(P->encoderChannelL);
RAL\ral_odometry.c:                   ^
RAL\ral_odometry.c: RAL\ral_odometry.c: 2 warnings, 0 errors
compiling ral_pid.c...
RAL\ral_pid.h(62): error:  #20: identifier "Motor_Setting" is undefined
RAL\ral_pid.h:   struct PIDStruct* PID_Init_Vel(struct PIDStruct* PIDS,double targetSpeed,Motor_Setting* motor,int encoderChannel);
RAL\ral_pid.h:                                                                            ^
RAL\ral_pid.c(179): warning:  #223-D: function "Encoder_ReadBuffer" declared implicitly
RAL\ral_pid.c:          return (double)Encoder_ReadBuffer(POSS->encoderChannel) - correctPos; 
RAL\ral_pid.c:                         ^
RAL\ral_pid.c(188): warning:  #223-D: function "Encoder_ReadBuffer" declared implicitly
RAL\ral_pid.c:          int newPos = Encoder_ReadBuffer(VELS->encoderChannel);
RAL\ral_pid.c:                       ^
RAL\ral_pid.c(205): error:  #140: too many arguments in function call
RAL\ral_pid.c:                  THES->pos->motorL->Motor_SetPWM(THES->pos->motorL,THES->pos->motorL->currPWM,result);
RAL\ral_pid.c:                                                                                               ^
RAL\ral_pid.c(207): error:  #140: too many arguments in function call
RAL\ral_pid.c:                  THES->pos->motorR->Motor_SetPWM(THES->pos->motorR,THES->pos->motorR->currPWM,result);
RAL\ral_pid.c:                                                                                               ^
RAL\ral_pid.c(237): warning:  #167-D: argument of type "double (*)(struct PosInfo *)" is incompatible with parameter of type "double (*)(void *)"
RAL\ral_pid.c:          return PID_Init(PIDS,PosInfoErrCal,PosInfoOutFunc,POSS);
RAL\ral_pid.c:                               ^
RAL\ral_pid.c(237): warning:  #167-D: argument of type "void (*)(struct PosInfo *, double)" is incompatible with parameter of type "void (*)(void *, double)"
RAL\ral_pid.c:          return PID_Init(PIDS,PosInfoErrCal,PosInfoOutFunc,POSS);
RAL\ral_pid.c:                                             ^
RAL\ral_pid.c(240): error:  #20: identifier "Motor_Setting" is undefined
RAL\ral_pid.c:   struct PIDStruct* PID_Init_Vel(struct PIDStruct* PIDS,double targetSpeed,Motor_Setting* motor,int encoderChannel){
RAL\ral_pid.c:                                                                            ^
RAL\ral_pid.c(248): warning:  #167-D: argument of type "double (*)(struct VelInfo *)" is incompatible with parameter of type "double (*)(void *)"
RAL\ral_pid.c:          return PID_Init(PIDS,VelInfoErrCal,VelInfoOutFunc,VELS);
RAL\ral_pid.c:                               ^
RAL\ral_pid.c(248): warning:  #167-D: argument of type "void (*)(struct VelInfo *, double)" is incompatible with parameter of type "void (*)(void *, double)"
RAL\ral_pid.c:          return PID_Init(PIDS,VelInfoErrCal,VelInfoOutFunc,VELS);
RAL\ral_pid.c:                                             ^
RAL\ral_pid.c(256): warning:  #167-D: argument of type "double (*)(struct ThetaInfo *)" is incompatible with parameter of type "double (*)(void *)"
RAL\ral_pid.c:          return PID_Init(PIDS,ThetaInfoErrCal,ThetaInfoOutFunc,THES);
RAL\ral_pid.c:                               ^
RAL\ral_pid.c(256): warning:  #167-D: argument of type "void (*)(struct ThetaInfo *, double)" is incompatible with parameter of type "void (*)(void *, double)"
RAL\ral_pid.c:          return PID_Init(PIDS,ThetaInfoErrCal,ThetaInfoOutFunc,THES);
RAL\ral_pid.c:                                               ^
RAL\ral_pid.c: RAL\ral_pid.c: 8 warnings, 4 errors
compiling mal_adc.c...
compiling mal_gpio.c...
compiling mal_iap.c...
compiling mal_pwm.c...
compiling mal_spi.c...
compiling mal_uart.c...
Target not created
Build target 'Target 1'
assembling Startup.s...
compiling main.c...
compiling ral_encoder.c...
compiling ral_joystick.c...
compiling ral_linesensor.c...
compiling ral_motor.c...
compiling ral_mux.c...
compiling ral_odometry.c...
RAL\ral_odometry.c(18): warning:  #223-D: function "Encoder_ReadBuffer" declared implicitly
RAL\ral_odometry.c:     P->encoderLastCntL = Encoder_ReadBuffer(P->encoderChannelL);
RAL\ral_odometry.c:                          ^
RAL\ral_odometry.c(34): warning:  #223-D: function "Encoder_ReadBuffer" declared implicitly
RAL\ral_odometry.c:       LnewCount = Encoder_ReadBuffer(P->encoderChannelL);
RAL\ral_odometry.c:                   ^
RAL\ral_odometry.c: RAL\ral_odometry.c: 2 warnings, 0 errors
compiling ral_pid.c...
RAL\ral_pid.c(179): warning:  #223-D: function "Encoder_ReadBuffer" declared implicitly
RAL\ral_pid.c:          return (double)Encoder_ReadBuffer(POSS->encoderChannel) - correctPos; 
RAL\ral_pid.c:                         ^
RAL\ral_pid.c(188): warning:  #223-D: function "Encoder_ReadBuffer" declared implicitly
RAL\ral_pid.c:          int newPos = Encoder_ReadBuffer(VELS->encoderChannel);
RAL\ral_pid.c:                       ^
RAL\ral_pid.c(237): warning:  #167-D: argument of type "double (*)(struct PosInfo *)" is incompatible with parameter of type "double (*)(void *)"
RAL\ral_pid.c:          return PID_Init(PIDS,PosInfoErrCal,PosInfoOutFunc,POSS);
RAL\ral_pid.c:                               ^
RAL\ral_pid.c(237): warning:  #167-D: argument of type "void (*)(struct PosInfo *, double)" is incompatible with parameter of type "void (*)(void *, double)"
RAL\ral_pid.c:          return PID_Init(PIDS,PosInfoErrCal,PosInfoOutFunc,POSS);
RAL\ral_pid.c:                                             ^
RAL\ral_pid.c(240): error:  #20: identifier "Motor_Setting" is undefined
RAL\ral_pid.c:   struct PIDStruct* PID_Init_Vel(struct PIDStruct* PIDS,double targetSpeed,Motor_Setting* motor,int encoderChannel){
RAL\ral_pid.c:                                                                            ^
RAL\ral_pid.c(248): warning:  #167-D: argument of type "double (*)(struct VelInfo *)" is incompatible with parameter of type "double (*)(void *)"
RAL\ral_pid.c:          return PID_Init(PIDS,VelInfoErrCal,VelInfoOutFunc,VELS);
RAL\ral_pid.c:                               ^
RAL\ral_pid.c(248): warning:  #167-D: argument of type "void (*)(struct VelInfo *, double)" is incompatible with parameter of type "void (*)(void *, double)"
RAL\ral_pid.c:          return PID_Init(PIDS,VelInfoErrCal,VelInfoOutFunc,VELS);
RAL\ral_pid.c:                                             ^
RAL\ral_pid.c(256): warning:  #167-D: argument of type "double (*)(struct ThetaInfo *)" is incompatible with parameter of type "double (*)(void *)"
RAL\ral_pid.c:          return PID_Init(PIDS,ThetaInfoErrCal,ThetaInfoOutFunc,THES);
RAL\ral_pid.c:                               ^
RAL\ral_pid.c(256): warning:  #167-D: argument of type "void (*)(struct ThetaInfo *, double)" is incompatible with parameter of type "void (*)(void *, double)"
RAL\ral_pid.c:          return PID_Init(PIDS,ThetaInfoErrCal,ThetaInfoOutFunc,THES);
RAL\ral_pid.c:                                               ^
RAL\ral_pid.c: RAL\ral_pid.c: 8 warnings, 1 error
compiling mal_adc.c...
compiling mal_gpio.c...
compiling mal_iap.c...
compiling mal_pwm.c...
compiling mal_spi.c...
compiling mal_uart.c...
Target not created
Build target 'Target 1'
assembling Startup.s...
compiling main.c...
compiling ral_encoder.c...
compiling ral_joystick.c...
compiling ral_linesensor.c...
compiling ral_motor.c...
compiling ral_mux.c...
compiling ral_odometry.c...
RAL\ral_odometry.c(18): warning:  #223-D: function "Encoder_ReadBuffer" declared implicitly
RAL\ral_odometry.c:     P->encoderLastCntL = Encoder_ReadBuffer(P->encoderChannelL);
RAL\ral_odometry.c:                          ^
RAL\ral_odometry.c(34): warning:  #223-D: function "Encoder_ReadBuffer" declared implicitly
RAL\ral_odometry.c:       LnewCount = Encoder_ReadBuffer(P->encoderChannelL);
RAL\ral_odometry.c:                   ^
RAL\ral_odometry.c: RAL\ral_odometry.c: 2 warnings, 0 errors
compiling ral_pid.c...
RAL\ral_pid.c(179): warning:  #223-D: function "Encoder_ReadBuffer" declared implicitly
RAL\ral_pid.c:          return (double)Encoder_ReadBuffer(POSS->encoderChannel) - correctPos; 
RAL\ral_pid.c:                         ^
RAL\ral_pid.c(188): warning:  #223-D: function "Encoder_ReadBuffer" declared implicitly
RAL\ral_pid.c:          int newPos = Encoder_ReadBuffer(VELS->encoderChannel);
RAL\ral_pid.c:                       ^
RAL\ral_pid.c(237): warning:  #167-D: argument of type "double (*)(struct PosInfo *)" is incompatible with parameter of type "double (*)(void *)"
RAL\ral_pid.c:          return PID_Init(PIDS,PosInfoErrCal,PosInfoOutFunc,POSS);
RAL\ral_pid.c:                               ^
RAL\ral_pid.c(237): warning:  #167-D: argument of type "void (*)(struct PosInfo *, double)" is incompatible with parameter of type "void (*)(void *, double)"
RAL\ral_pid.c:          return PID_Init(PIDS,PosInfoErrCal,PosInfoOutFunc,POSS);
RAL\ral_pid.c:                                             ^
RAL\ral_pid.c(248): warning:  #167-D: argument of type "double (*)(struct VelInfo *)" is incompatible with parameter of type "double (*)(void *)"
RAL\ral_pid.c:          return PID_Init(PIDS,VelInfoErrCal,VelInfoOutFunc,VELS);
RAL\ral_pid.c:                               ^
RAL\ral_pid.c(248): warning:  #167-D: argument of type "void (*)(struct VelInfo *, double)" is incompatible with parameter of type "void (*)(void *, double)"
RAL\ral_pid.c:          return PID_Init(PIDS,VelInfoErrCal,VelInfoOutFunc,VELS);
RAL\ral_pid.c:                                             ^
RAL\ral_pid.c(256): warning:  #167-D: argument of type "double (*)(struct ThetaInfo *)" is incompatible with parameter of type "double (*)(void *)"
RAL\ral_pid.c:          return PID_Init(PIDS,ThetaInfoErrCal,ThetaInfoOutFunc,THES);
RAL\ral_pid.c:                               ^
RAL\ral_pid.c(256): warning:  #167-D: argument of type "void (*)(struct ThetaInfo *, double)" is incompatible with parameter of type "void (*)(void *, double)"
RAL\ral_pid.c:          return PID_Init(PIDS,ThetaInfoErrCal,ThetaInfoOutFunc,THES);
RAL\ral_pid.c:                                               ^
RAL\ral_pid.c: RAL\ral_pid.c: 8 warnings, 0 errors
compiling mal_adc.c...
compiling mal_gpio.c...
compiling mal_iap.c...
compiling mal_pwm.c...
compiling mal_spi.c...
compiling mal_uart.c...
linking...
robocon.axf: Error: L6218E: Undefined symbol Encoder_ReadBuffer (referred from ral_odometry.o).
robocon.axf: Not enough information to list image symbols.
robocon.axf: Finished: 1 information, 0 warning and 1 error messages.
Target not created
